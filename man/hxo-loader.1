.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "HXO-loader" "1" "September 2024" "Commands and Usage Manual" ""
.hy
.SH NAME
.PP
hxo-loader \[en] Hybrid Xpl0it loader
.SH DESCRIPTION
.PP
Hybrid Xpl0it loader (HXO-loader) is an exclusive tool/framework for
auto-injecting shared objects into target processes.
.SS UASBLE COMMANDS
.IP \[bu] 2
\f[C]hxo-run\f[R] - runs the application without modifying files.
.IP \[bu] 2
\f[C]hxo-patch\f[R] - patches the elf binary (executable/shared object).
.IP \[bu] 2
\f[C]hxo-rmpatch\f[R] - revert patches.
.SH USAGE
.SS Local Application/Game setup
.IP "1." 3
\f[B]Goto the directory you have your target game executable(s).\f[R]
.RS 4
.IP
.nf
\f[C]
cd <path to elf directory>
\f[R]
.fi
.RE
.IP "2." 3
\f[B]Copy \f[CB]HXO.ini\f[B] to that directory.\f[R]
.RS 4
.PP
or, re-download using:
.IP
.nf
\f[C]
wget https://raw.githubusercontent.com/bitwaree/HXO-loader/master/HXO.ini
\f[R]
.fi
.PP
NOTE: if this file is not copied, HXO-loader will proceed with default
settings.
It\[cq]s always recomanded (but not mandatory) to copy this file to the
directory.
.RE
.IP "3." 3
\f[B]Create a directory and place your .hxo hacks.\f[R]
.RS 4
.IP
.nf
\f[C]
mkdir scripts
\f[R]
.fi
.PP
NOTE: \f[C]\[dq]scripts\[dq]\f[R] is the default folder name, but it can
be changed by modifying \f[C]\[dq]HXO.ini\[dq]\f[R]
.IP
.nf
\f[C]
cp <module1.hxo> <module2.hxo> <module3.hxo> ./scripts/
\f[R]
.fi
.PP
Make sure your modules have a \f[C].hxo\f[R] filename extention,(if not:
do it manually) to make it recognisable.
.IP
.nf
\f[C]
#  So it will look like ...
#./scripts/module1.so -> ./scripts/module1.hxo 
#./scripts/module2.so -> ./scripts/module2.hxo 
#./scripts/module3.so -> ./scripts/module3.hxo 
\f[R]
.fi
.RE
.IP "4." 3
\f[B]Finally run the game using \f[CB]hxo-run\f[B] or
\f[CB]hxo-patch\f[B]\f[R]
.RS 4
.IP \[bu] 2
For a test/temporary run (recommended for testing):
.RS 2
.IP
.nf
\f[C]
hxo-run ./<elf-executable>
\f[R]
.fi
.RE
.IP \[bu] 2
or, patch the elf to load hxo automatically (recommended for
finalizing/distributing):
.RS 2
.IP
.nf
\f[C]
hxo-patch <elf-executable>
\f[R]
.fi
.RE
.RE
.IP \[bu] 2
\f[B]\f[BI]So the tree should look something like this:\f[B]\f[R]
.RS 2
.IP
.nf
\f[C]
  Game-Dir
  \[u251C]\[u2500]\[u2500] game.elf
  \[u251C]\[u2500]\[u2500] game.elf.bak
  \[u251C]\[u2500]\[u2500] HXO.ini
  \[u251C]\[u2500]\[u2500] scripts
  \[br]   \[u251C]\[u2500]\[u2500] hack1.hxo
  \[br]   \[u2514]\[u2500]\[u2500] hack2.hxo
  \[u2514]\[u2500]\[u2500]...
\f[R]
.fi
.RE
.IP \[bu] 2
NOTE: Patching will change the target file, and it\[cq]s going to create
a backup file with a .bak extention.
To remove/revert the patch just run:
.RS 2
.IP
.nf
\f[C]
hxo-rmpatch <patched-elf-executable>
\f[R]
.fi
.RE
.SH SEE ALSO
.PP
\f[C]hxo-devl(3)\f[R] - \f[I]to learn about programming and creating
\f[BI].hxo\f[I] files\f[R]
.SH ACKNOWLEDGEMENTS
.IP \[bu] 2
INIh (https://github.com/benhoyt/inih), an awesome INI file parser by
Ben Hoyt, used in this project for configuration parsing.
.IP \[bu] 2
This entire project is distributed under the terms of
GPL-v3 (https://www.gnu.org/licenses/quick-guide-gplv3.html).
.SH DISTRIBUTION
.PP
Please read
https://github.com/bitwaree/HXO-loader/blob/master/DISTRIBUTION.md for
additional info.
.SH AUTHORS
bitwaree <bitware@duck.com>.
